// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package store

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockAestheticsStore creates a new instance of MockAestheticsStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAestheticsStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAestheticsStore {
	mock := &MockAestheticsStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockAestheticsStore is an autogenerated mock type for the AestheticsStore type
type MockAestheticsStore struct {
	mock.Mock
}

type MockAestheticsStore_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAestheticsStore) EXPECT() *MockAestheticsStore_Expecter {
	return &MockAestheticsStore_Expecter{mock: &_m.Mock}
}

// GetImageScore provides a mock function for the type MockAestheticsStore
func (_mock *MockAestheticsStore) GetImageScore(id string) (float32, error) {
	ret := _mock.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetImageScore")
	}

	var r0 float32
	var r1 error
	if returnFunc, ok := ret.Get(0).(func(string) (float32, error)); ok {
		return returnFunc(id)
	}
	if returnFunc, ok := ret.Get(0).(func(string) float32); ok {
		r0 = returnFunc(id)
	} else {
		r0 = ret.Get(0).(float32)
	}
	if returnFunc, ok := ret.Get(1).(func(string) error); ok {
		r1 = returnFunc(id)
	} else {
		r1 = ret.Error(1)
	}
	return r0, r1
}

// MockAestheticsStore_GetImageScore_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetImageScore'
type MockAestheticsStore_GetImageScore_Call struct {
	*mock.Call
}

// GetImageScore is a helper method to define mock.On call
//   - id string
func (_e *MockAestheticsStore_Expecter) GetImageScore(id interface{}) *MockAestheticsStore_GetImageScore_Call {
	return &MockAestheticsStore_GetImageScore_Call{Call: _e.mock.On("GetImageScore", id)}
}

func (_c *MockAestheticsStore_GetImageScore_Call) Run(run func(id string)) *MockAestheticsStore_GetImageScore_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockAestheticsStore_GetImageScore_Call) Return(f float32, err error) *MockAestheticsStore_GetImageScore_Call {
	_c.Call.Return(f, err)
	return _c
}

func (_c *MockAestheticsStore_GetImageScore_Call) RunAndReturn(run func(id string) (float32, error)) *MockAestheticsStore_GetImageScore_Call {
	_c.Call.Return(run)
	return _c
}

// SetImageScore provides a mock function for the type MockAestheticsStore
func (_mock *MockAestheticsStore) SetImageScore(id string, score float32) error {
	ret := _mock.Called(id, score)

	if len(ret) == 0 {
		panic("no return value specified for SetImageScore")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(string, float32) error); ok {
		r0 = returnFunc(id, score)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// MockAestheticsStore_SetImageScore_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetImageScore'
type MockAestheticsStore_SetImageScore_Call struct {
	*mock.Call
}

// SetImageScore is a helper method to define mock.On call
//   - id string
//   - score float32
func (_e *MockAestheticsStore_Expecter) SetImageScore(id interface{}, score interface{}) *MockAestheticsStore_SetImageScore_Call {
	return &MockAestheticsStore_SetImageScore_Call{Call: _e.mock.On("SetImageScore", id, score)}
}

func (_c *MockAestheticsStore_SetImageScore_Call) Run(run func(id string, score float32)) *MockAestheticsStore_SetImageScore_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		var arg1 float32
		if args[1] != nil {
			arg1 = args[1].(float32)
		}
		run(
			arg0,
			arg1,
		)
	})
	return _c
}

func (_c *MockAestheticsStore_SetImageScore_Call) Return(err error) *MockAestheticsStore_SetImageScore_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockAestheticsStore_SetImageScore_Call) RunAndReturn(run func(id string, score float32) error) *MockAestheticsStore_SetImageScore_Call {
	_c.Call.Return(run)
	return _c
}
