package templates

import (
	"os"
	"teledeck/internal/middleware"
)

templ header(title string) {
	<head>
		<title>{ title }</title>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<script src="static/script/htmx.min.js" nonce={ middleware.GetHtmxNonce(ctx) }></script>
		<script src="static/script/response-targets.js" nonce={ middleware.GetResponseTargetsNonce(ctx) } defer></script>
        <script src="static/script/gallery.js" nonce={ middleware.GetGalleryScriptsNonce(ctx) } defer></script>
        <script src="static/script/preferences.js" defer></script>
		<script>
			// Dark mode toggle function
			function toggleDarkMode() {
				document.documentElement.classList.toggle('dark');
			}
		</script>
		if os.Getenv("env") == "production" {
			<link rel="stylesheet" href="static/css/style.min.css" nonce={ middleware.GetTwNonce(ctx) }/>
		} else {
			<link rel="stylesheet" href="static/css/style.css" nonce={ middleware.GetTwNonce(ctx) }/>
		}
	</head>
}

templ footer() {
	<footer class="bg-neutral-200 dark:bg-dark-surface text-neutral-600 dark:text-neutral-400 p-4 mt-8">
		<div class="main-container text-center">
			Â© 2025 Teledeck
		</div>
	</footer>
}

templ nav() {
	<nav class="bg-primary-600 p-4 dark:bg-dark-surface text-white">
		<div class="container flex justify-between items-center" name="sort-options">
			<ol class="flex space-x-4 items-center">
				<li>
					<a class="text-gray-200" href="/">Home</a>
				</li>
				<li>
					<a class="text-gray-200" href="/about">About</a>
				</li>
				<li>
					<button onclick="toggleDarkMode()" class="px-4 py-2 bg-primary-700 dark:bg-primary-800 rounded">
						Toggle Dark Mode
					</button>
				</li>
				<li>
					<select id="sort-select"
					class="bg-primary-700 dark:bg-primary-800 text-gray-200 rounded px-2 py-1"
					onchange="setPreference('sort', this.value); updateGallery();"
					name="sort">
						<option value="date_desc">Newest posts first</option>
						<option value="date_asc">Oldest posts first</option>
						<option value="id_desc">Recent additions first</option>
						<option value="id_asc">Oldest additions first</option>
						<option value="size_desc">Largest files first</option>
						<option value="size_asc">Smallest files first</option>
						<option value="random">Random</option>
					</select>
				</li>
				<li>
					<select id="favorites-select"
					class="bg-primary-700 dark:bg-primary-800 text-gray-200 rounded px-2 py-1"
					onchange="setPreference('favorites', this.value); updateGallery();"
					name="favorites">
						<option value="all">View all posts</option>
						<option value="favorites">Favorites only</option>
						<option value="non-favorites">Non-favorites only</option>
					</select>
				</li>
				<li>
					<input type="checkbox"
						id="videos-check"
						name="videos"
						value="true"
						onchange="setPreference('videos', this.checked); updateGallery();"
					></input>
					<label for="videos-check">Videos only</label>
				</li>
				<li>
					<input
						id="search-field"
						name="search"
						onchange="setPreference('search', this.value); updateGallery();"
						class="text-gray-800"
						placeholder="Search"
					></input>
				</li>
/* 				<li>
					@TagsDatalist(tags)
				</li> */
			</ol>
			<ol class="flex space-x-4">
				if middleware.GetUser(ctx) != nil {
					<li>
						<button class="text-gray-200" hx-target="body" hx-swap="innerHTML" hx-post="/logout">Logout</button>
					</li>
				} else {
					<li>
						<a class="text-gray-200" href="/register">Register</a>
					</li>
					<li>
						<a class="text-gray-200" href="/login">Login</a>
					</li>
				}
			</ol>
		</div>
	</nav>
}

templ contextMenu() {
	<div id="context-menu">
		<div class="context-item download-button">Download</div>
		<div class="context-item favorite-button">Favorite</div>
		<div class="context-item delete-button">Delete</div>
		<div class="context-item tags-button">Tags</div>
		<div class="context-item score-button">Aesthetics Score</div>
	</div>
}

templ Layout(contents templ.Component, title string) {
    <!DOCTYPE html>
    <html lang="en" class="dark">
		@header(title)
		<body class="flex flex-col h-full">
			@nav()
			<main class="flex-1 container main-container ">
				@contents
				@contextMenu()
			</main>
			@footer()
		</body>
	</html>
}
